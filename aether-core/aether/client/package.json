{
  "name": "Aether",
  "version": "0.0.1+2108271413.db6a815.d",
  "description": "Aether",
  "readme": "https://getaether.net",
  "main": "src/app/mainmain.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "npm run update-version-string && npx electron .",
    "notouchstart": "npx electron .",
    "sasswatch": "node-sass --watch ./src/app/scss/main.scss -o ./src/app/scss/compiled --output-style=compressed --source-map=true --source-map-contents=scss || echo To use this watcher, please install node-sass. For that, do: npm install -g node-sass",
    "tswatch": "../../tsc -w || echo To use the TypeScript watcher, please install Typescript. For that, do: npm install -g typescript",
    "wpbuild": "webpack",
    "wpwatch": "webpack --watch",
    "dist-mac": "npm run update-version-string && electron-builder --mac -c.extraMetadata.version=$(node ./buildresources/get-version-from-git.js print)",
    "dist-win": "npm run update-version-string && electron-builder --win -c.extraMetadata.version=$(node ./buildresources/get-version-from-git.js print)",
    "dist-linux-docker-trigger": "apt-get install libxkbfile-dev -y && electron-builder --linux -c.extraMetadata.version=$BVERSION",
    "dist-linux-docker-trigger-native": "apt-get install libxkbfile-dev -y && npm install && electron-builder --linux -c.extraMetadata.version=$BVERSION",
    "dist-linux-docker-install-deps": "docker run --rm -ti --env ELECTRON_CACHE=\"/root/.cache/electron\" --env ELECTRON_BUILDER_CACHE=\"/root/.cache/electron-builder\" -v ${PWD}:/project -v ${PWD}/../../../BundledReleases:/BundledReleases -v ${PWD##*/}-node-modules:/project/node_modules -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder electronuserland/builder:10 npm install",
    "dist-linux": "npm run update-version-string && docker run --rm -ti --env ELECTRON_CACHE=\"/root/.cache/electron\" --env ELECTRON_BUILDER_CACHE=\"/root/.cache/electron-builder\" -v ${PWD}:/project -v ${PWD}/../../../BundledReleases:/BundledReleases -v ${PWD}/../../../ReleaseArchive:/ReleaseArchive -v ${PWD##*/}-node-modules:/project/node_modules -v ${PWD}/../../../.git:/project/.git -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder -e BVERSION=$(node ./buildresources/get-version-from-git.js print) electronuserland/builder:10 npm run dist-linux-docker-trigger",
    "dist-linux-native": "npm run update-version-string && docker run --rm -ti --env ELECTRON_CACHE=\"/root/.cache/electron\" --env ELECTRON_BUILDER_CACHE=\"/root/.cache/electron-builder\" -v ${PWD}:/project -v ${PWD}/../../../BundledReleases:/BundledReleases -v ${PWD}/../../../ReleaseArchive:/ReleaseArchive -v ${PWD##*/}-node-modules:/project/node_modules -v ${PWD}/../../../.git:/project/.git -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder -e BVERSION=$(node ./buildresources/get-version-from-git.js print) electronuserland/builder:10 npm run dist-linux-docker-trigger-native",
    "dist-linux-server": "VERSIONATSTART=$(node ./buildresources/get-version-from-git.js print) && mv ./MAKE_BINARIES/aether-backend-linux-x64 ./MAKE_BINARIES/aether-backend-linux-x64-$VERSIONATSTART 2> /dev/null || true && node ./buildresources/aftercompile.js run && mv ./MAKE_BINARIES/aether-backend-linux-x64-extverify ./MAKE_BINARIES/aether-backend-linux-x64-extverify-$VERSIONATSTART 2> /dev/null || true && node ./buildresources/aftercompile.js run",
    "dist": "npm run update-version-string && VERSIONATSTART=$(node ./buildresources/get-version-from-git.js print) && electron-builder --mac --win -c.extraMetadata.version=$VERSIONATSTART && docker run --rm -ti --env ELECTRON_CACHE=\"/root/.cache/electron\" --env ELECTRON_BUILDER_CACHE=\"/root/.cache/electron-builder\" -v ${PWD}:/project -v ${PWD}/../../../BundledReleases:/BundledReleases -v ${PWD}/../../../ReleaseArchive:/ReleaseArchive -v ${PWD##*/}-node-modules:/project/node_modules -v ${PWD}/../../../.git:/project/.git -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder -e BVERSION=$VERSIONATSTART electronuserland/builder:10 npm run dist-linux-docker-trigger && mv ./MAKE_BINARIES/aether-backend-linux-x64 ./MAKE_BINARIES/aether-backend-linux-x64-$VERSIONATSTART 2> /dev/null || true && node ./buildresources/aftercompile.js run && mv ./MAKE_BINARIES/aether-backend-linux-x64-extverify ./MAKE_BINARIES/aether-backend-linux-x64-extverify-$VERSIONATSTART 2> /dev/null || true && node ./buildresources/aftercompile.js run",
    "pack": "electron-builder --dir",
    "rebuild": "electron-rebuild",
    "update-version-string": "node ./buildresources/get-version-from-git.js",
    "quickpublish": "../../support/quickpublish/quickpublish.sh"
  },
  "author": {
    "name": "Aether Technologies, Inc.",
    "email": "hello@getaether.net"
  },
  "homepage": "https://getaether.net",
  "license": "SEE LICENSE IN the repository.",
  "devDependencies": {
    "dotenv": "10.0.0",
    "electron": "13.2.2",
    "electron-builder": "22.11.7",
    "electron-notarize": "1.1.0",
    "electron-rebuild": "3.2.0",
    "file-loader": "6.2.0",
    "node-sass": "6.0.1",
    "read-pkg-up": "7",
    "resolve": "1.20.0",
    "resolve-url-loader": "4.0.0",
    "sass-loader": "12.1.0",
    "style-loader": "3.2.1",
    "ts-loader": "9.2.5",
    "typescript": "4.4.2",
    "vue-loader": "15.9.8",
    "vue-style-loader": "^4.1.3",
    "vue-template-compiler": "2.6.14",
    "webpack": "5.51.1",
    "webpack-cli": "4.8.0",
    "webpack-node-externals": "3.0.0",
    "write-pkg": "4"
  },
  "dependencies": {
    "@grpc/grpc-js": "*",
    "ajv": "8.6.2",
    "auto-launch": "5.0.5",
    "autosize": "5.0.1",
    "bulma": "0.9.3",
    "css-loader": "6.2.0",
    "dompurify": "2.3.1",
    "electron-better-ipc": "2.0.1",
    "electron-context-menu": "github:nehbit/electron-context-menu",
    "electron-hunspell": "1.1.2",
    "electron-is-dev": "2.0.0",
    "electron-store": "8.0.0",
    "electron-unhandled": "3.0.2",
    "electron-updater": "4.3.9",
    "electron-util": "0.17.0",
    "google-protobuf": "3.17.3",
    "highlight.js": "11.2.0",
    "markdown-it": "12.2.0",
    "marked": "3.0.2",
    "minimatch": "3.0.4",
    "mixpanel": "0.13.0",
    "module-alias": "2.2.2",
    "mousetrap": "1.6.5",
    "node-abi": "2.30.0",
    "tippy.js": "6.3.1",
    "tree-kill": "1.2.2",
    "v-click-outside": "3.1.2",
    "vue": "2.6.14",
    "vue-awesome": "4.3.1",
    "vue-devtools": "5.1.4",
    "vue-router": "3.5.2",
    "vue-simple-spinner": "1.2.10",
    "vuex": "3.6.2",
    "vuex-router-sync": "5.0.0",
    "xstate": "4.23.1"
  },
  "_moduleAliases": {
    "vue": "node_modules/vue/dist/vue.min.js",
    "vue-router": "node_modules/vue-router/dist/vue-router.js"
  },
  "//": [
    "chokidar, fsevents and watchpack are added because of dependency compatibility - we need to fix their versions. They are not actually used in the app. The reason is that fsevents 1.2.7 does not build with the version of electrion we have, but 1.2.4 does. Unfortunately, npm is aggressive enough that it will always pick the newest version of a package when the package is not exactly fixed, which means fsevents 1.2.7 gets installed, which breaks installs. To be able to get fsevents to be 1.2.4, we had to fix the dependencies to the lowest versions of deps that are still valid for the parent dependencies manually.",
    "Other possible architectures for linux:",
    "armv7l",
    "^ (32 bit arm)",
    "arm64",
    "ia32",
    "Don't forget to add the things to extraResources below to make sure they get the right binaries.",
    "'dist': 'npm run dist-mac && npm run dist-win && npm run dist-linux-docker-install-deps && npm run dist-linux',"
  ],
  "postinstall": "electron-builder install-app-deps",
  "build": {
    "appId": "com.aethertechnologies.Aether",
    "productName": "Aether",
    "artifactName": "${productName}-${version}.${ext}",
    "copyright": "Copyright Â© 2019 Aether Technologies, Inc.",
    "publish": [
      {
        "provider": "generic",
        "url": "https://static.getaether.net/AutoUpdate/Latest",
        "publishAutoUpdate": true,
        "channel": "latest"
      }
    ],
    "asar": true,
    "asarUnpack": [
      "app/aether-backend-mac-x64",
      "app/aether-frontend-mac-x64",
      "app/aether-backend-win-x64",
      "app/aether-frontend-win-x64",
      "app/aether-backend-linux-x64",
      "app/aether-frontend-linux-x64",
      "app/aether-backend-win-ia32",
      "app/aether-frontend-win-ia32",
      "app/aether-backend-linux-ia32",
      "app/aether-frontend-linux-ia32",
      "app/aether-backend-linux-arm64",
      "app/aether-frontend-linux-arm64",
      "app/aether-backend-linux-arm32",
      "app/aether-frontend-linux-arm32"
    ],
    "protocols": [
      {
        "name": "Aether",
        "schemes": [
          "aether"
        ]
      }
    ],
    "directories": {
      "buildResources": "buildresources",
      "output": "../../../BundledReleases"
    },
    "files": [
      "**/*",
      "!**/node_modules",
      "/*/{CHANGELOG.md,README.md,README,readme.md,readme,test,__tests__,tests,powered-test,example,examples,*.d.ts}",
      "!**/node_modules/.bin",
      "!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}",
      "!**/._*",
      "!.editorconfig",
      "!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,thumbs.db,.gitignore,.gitattributes,.flowconfig,.yarn-metadata.json,.idea,.vs,appveyor.yml,.travis.yml,circle.yml,npm-debug.log,.nyc_output,yarn.lock,.yarn-integrity}",
      "!MAKE_BINARIES${/*}",
      "!tsconfig.json",
      "!prettier.config.js",
      "!webpack.config.js",
      "!src{/*}",
      "src/app/mainmain.js"
    ],
    "afterAllArtifactBuild": "./buildresources/aftercompile.js",
    "snap": {
      "confinement": "strict",
      "plugs": [
        "desktop",
        "unity7",
        "browser-support",
        "network",
        "pulseaudio",
        "opengl"
      ],
      "grade": "devel",
      "summary": "Aether is a peer-to-peer network of independent, self-moderated communities."
    },
    "nsis": {
      "perMachine": true,
      "artifactName": "${productName}-Setup-${version}.${ext}"
    },
    "dmg": {
      "icon": "src/app/ext_dep/images/MacDiskImage.icns",
      "background": "src/app/ext_dep/images/DMGBackgroundMultiRes.tiff",
      "iconSize": "120",
      "contents": [
        {
          "x": 758,
          "y": 309,
          "type": "file"
        },
        {
          "x": 976,
          "y": 309,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "mac": {
      "target": [
        {
          "target": "default",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "public.app-category.news",
      "icon": "src/app/ext_dep/images/aether.icns",
      "type": "distribution",
      "hardenedRuntime": true,
      "extraResources": [
        {
          "from": "MAKE_BINARIES/aether-backend-mac-x64",
          "to": "app/aether-backend-mac-x64"
        },
        {
          "from": "MAKE_BINARIES/aether-frontend-mac-x64",
          "to": "app/aether-frontend-mac-x64"
        },
        {
          "from": "src/app/ext_dep/dicts",
          "to": "app/dicts"
        }
      ]
    },
    "win": {
      "signingHashAlgorithms": [
        "sha256"
      ],
      "target": [
        {
          "target": "nsis",
          "arch": [
            "ia32",
            "x64"
          ]
        }
      ],
      "publisherName": "Aether Technologies, Inc.",
      "icon": "src/app/ext_dep/images/aether.ico",
      "extraResources": [
        {
          "from": "MAKE_BINARIES/aether-backend-win-x64.exe",
          "to": "app/aether-backend-win-x64.exe"
        },
        {
          "from": "MAKE_BINARIES/aether-frontend-win-x64.exe",
          "to": "app/aether-frontend-win-x64.exe"
        },
        {
          "from": "MAKE_BINARIES/aether-backend-win-ia32.exe",
          "to": "app/aether-backend-win-ia32.exe"
        },
        {
          "from": "MAKE_BINARIES/aether-frontend-win-ia32.exe",
          "to": "app/aether-frontend-win-ia32.exe"
        },
        {
          "from": "src/app/ext_dep/dicts",
          "to": "app/dicts"
        }
      ]
    },
    "linux": {
      "target": [
        {
          "target": "snap",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "Network",
      "description": "Aether is a peer-to-peer network of independent, self-moderated communities.",
      "synopsis": "Aether is a peer-to-peer network of independent, self-moderated communities.",
      "extraResources": [
        {
          "from": "MAKE_BINARIES/aether-backend-linux-x64",
          "to": "app/aether-backend-linux-x64"
        },
        {
          "from": "MAKE_BINARIES/aether-frontend-linux-x64",
          "to": "app/aether-frontend-linux-x64"
        },
        {
          "from": "MAKE_BINARIES/aether-backend-linux-ia32",
          "to": "app/aether-backend-linux-ia32"
        },
        {
          "from": "MAKE_BINARIES/aether-frontend-linux-ia32",
          "to": "app/aether-frontend-linux-ia32"
        },
        {
          "from": "src/app/ext_dep/dicts",
          "to": "app/dicts"
        }
      ]
    }
  },
  "_id": "Aether@2.0.0-dev.14"
}
